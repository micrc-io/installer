#!/bin/bash


echo "#######################################"
echo "## Start -- Post install"
echo "#######################################"


echo "==========================修复argocd out of sync问题============================"
# cert-manager Certificate duration和renewBefore不识别导致out of sync
kubectl patch -n argocd configmap argocd-cm --type=json -p='[{"op": "add", "path": "/data/resource.customizations.ignoreDifferences.cert-manager.io_Certificate", "value": "jsonPointers:\n- /spec/duration\n- /spec/renewBefore\n"}]'
echo "===============================Done.============================================"


echo "===============================jenkins agent自定义镜像=========================="
# 自定义ci agent及镜像
kubectl get cm -n kubesphere-devops-system jenkins-casc-config -o json | jq --arg patch "`cat ./config/jenkins_user.yaml`" '.data["jenkins_user.yaml"] = $patch' | kubectl replace -f -

kubectl rollout restart -n kubesphere-devops-system deploy devops-jenkins
echo "=======================================Done.===================================="


echo "=========================创建代理configmap修复github访问========================"
cat <<EOF | kubectl apply -f -
---
apiVersion: v1
kind: ConfigMap
metadata:
 namespace: kube-system
 name: proxy-config
 annotations:
   reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
   reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "gitlab-system"
   reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
   reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "gitlab-system"
data:
 http_proxy: "http://10.0.0.102:7890"
 HTTP_PROXY: "http://10.0.0.102:7890"
 https_proxy: "http://10.0.0.102:7890"
 HTTPS_PROXY: "http://10.0.0.102:7890"
 all_proxy: "http://10.0.0.102:7890"
 ALL_PROXY: "http://10.0.0.102:7890"
 no_proxy: "localhost,127.0.0.0/8,10.0.0.0/16,100.233.0.0/18,100.233.64.0/18,*.integration.ouxxa.com,*.it.ouxxa.com"
 NO_PROXY: "localhost,127.0.0.0/8,10.0.0.0/16,100.233.0.0/18,100.233.64.0/18,*.integration.ouxxa.com,*.it.ouxxa.com"
EOF

# devops-argocd-repo-server需要代理访问github
#kubectl patch -n argocd deployment devops-argocd-repo-server -p '{"spec": {"template": {"spec": {"containers": [{"name": "repo-server", "envFrom": [{ "configMapRef": { "name": "proxy-config" } }]}]}}}}'
#kubectl patch -n kubesphere-devops-system deployment  devops-jenkins -p '{"spec": {"template": {"spec": {"containers": [{"name": "devops-jenkins", "envFrom": [{"configMapRef": {"name": "proxy-config"}}]}]}}}}'

#kubectl rollout restart -n argocd deploy devops-argocd-repo-server
#kubectl rollout restart -n kubesphere-devops-system deploy devops-jenkins
#echo "==================================Done.========================================="


echo "######################################"
echo "## Successful -- 完成."
echo "## 在kubesphere ‘控制台’ 的 ‘系统组件’ 确保所有组件正常运行后开始使用"
echo "######################################"
